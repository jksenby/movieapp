{"version":3,"file":"static/js/999.fea88f74.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.js","components/SidePanel/SidePanel.js","components/pages/MovieListPage.js","services/MovieService.js"],"sourcesContent":["import \"./movieList.css\";\r\nimport MovieService from \"../../services/MovieService\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst MovieList = ({ handleChange, handleVideo, search }) => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const [page, setPage] = useState(2);\r\n  const [loading, setLoading] = useState(false);\r\n  const { getAllMovies } = MovieService();\r\n  useEffect(() => {\r\n    getAllMovies().then((res) => {\r\n      setMovieList(res);\r\n      setLoading(false);\r\n    });\r\n    setLoading(true);\r\n  }, []);\r\n\r\n  const onMovieLoaded = (newMovieList) => {\r\n    setPage((page) => page + 1);\r\n    setMovieList((movieList) => [...movieList, ...newMovieList]);\r\n    setLoading(false);\r\n  };\r\n\r\n  function renderItems(arr) {\r\n    const items = arr.map((item, i) => {\r\n      return (\r\n        <li\r\n          tabIndex={0}\r\n          key={item.id}\r\n          onClick={() => {\r\n            handleChange(item.id);\r\n          }}\r\n        >\r\n          <Card style={{ width: \"12rem\", margin: \"50px\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              alt={item.name}\r\n              src={`http://image.tmdb.org/t/p/w500${item.thumb}`}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>{item.title}</Card.Title>\r\n              <Card.Text>\r\n                {item.overview.slice(0, 100)}\r\n                {item.overview.length > 30 ? \"...\" : null}\r\n              </Card.Text>\r\n              <Link to={`/${item.id}/videos`}>\r\n                <Button\r\n                  variant=\"outline-primary\"\r\n                  onClick={() => handleVideo(item.id)}\r\n                >\r\n                  Watch\r\n                </Button>\r\n              </Link>{\" \"}\r\n              | {item.rating}\r\n              /10\r\n            </Card.Body>\r\n          </Card>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul style={{ display: \"-ms-grid\" }}>{items}</ul>;\r\n  }\r\n  const items = renderItems(\r\n    movieList.filter((item, i) => {\r\n      if (item.title.toLowerCase().includes(search.toLowerCase())) return item;\r\n    })\r\n  );\r\n  const spinner = loading ? <Spinner /> : null;\r\n  return (\r\n    <div className=\"list\">\r\n      {items}\r\n      {spinner}\r\n      <Button\r\n        variant=\"dark\"\r\n        style={{ display: \"block\" }}\r\n        onClick={() => {\r\n          getAllMovies(`&page=${page}`).then(onMovieLoaded);\r\n          setLoading(true);\r\n        }}\r\n      >\r\n        Load more...{\" \"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import \"./sidePanel.scss\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\n\r\nimport MovieService from \"../../services/MovieService\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst SidePanel = ({ movieId }) => {\r\n  const [movieInfo, setMovieInfo] = useState([]);\r\n  const { getMovie } = MovieService();\r\n  const [loading, setLoading] = useState(true);\r\n  useEffect(() => {\r\n    getMovie(movieId).then((res) => {\r\n      setMovieInfo(res);\r\n      setLoading(false);\r\n    });\r\n    setLoading(true);\r\n  }, [movieId]);\r\n  function getGenres(genre) {\r\n    if (typeof genre.genres === \"object\") {\r\n      const items = genre.genres.map((item, i) => {\r\n        return (\r\n          <li tabIndex={0} key={item.id} className=\"genres\">\r\n            <Button variant=\"danger\">{item.name} </Button>{\" \"}\r\n          </li>\r\n        );\r\n      });\r\n\r\n      return <ul style={{ display: \"-ms-grid\", margin: 0 }}>{items}</ul>;\r\n    }\r\n  }\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const view = loading ? null : (\r\n    <View movieInfo={movieInfo} getGenres={getGenres} />\r\n  );\r\n  return (\r\n    <>\r\n      {spinner} {view}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({ movieInfo, getGenres }) => {\r\n  return (\r\n    <div className=\"body\">\r\n      <Card style={{ width: \"100%\", margin: 0 }}>\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={`http://image.tmdb.org/t/p/w500${movieInfo.thumb}`}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{movieInfo.title}</Card.Title>\r\n          <Card.Text>{movieInfo.overview}</Card.Text>\r\n        </Card.Body>\r\n        <ListGroup\r\n          className=\"list-group-flush\"\r\n          style={{ marginTop: \"auto\", marginBottom: \"auto\", paddingLeft: 0 }}\r\n        >\r\n          {getGenres(movieInfo)}\r\n        </ListGroup>\r\n        <Card.Body>\r\n          <div className=\"d-grid gap-2\">\r\n            <Button variant=\"primary\" size=\"lg\">\r\n              Watch the Movie\r\n            </Button>\r\n          </div>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n","import { useState } from \"react\";\r\nimport MovieList from \"../MovieList/MovieList\";\r\nimport SidePanel from \"../SidePanel/SidePanel\";\r\n\r\nconst MovieListPage = ({ handleVideo, search }) => {\r\n  const [sidePanel, setSidePanel] = useState(null);\r\n  const handleChange = (sidePanelId) => {\r\n    setSidePanel(sidePanelId);\r\n  };\r\n  const sideWindow = sidePanel ? <SidePanel movieId={sidePanel} /> : null;\r\n  return (\r\n    <div>\r\n      <MovieList\r\n        handleChange={handleChange}\r\n        handleVideo={handleVideo}\r\n        search={search}\r\n      />\r\n      {sideWindow}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieListPage;\r\n","const MovieService = () => {\r\n  const _apiBase = \"https://api.themoviedb.org/3/movie/\",\r\n    _api_Key = \"api_key=85569a59f98486c20457b4d061f63224\";\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      accept: \"application/json\",\r\n    },\r\n  };\r\n\r\n  const getResource = async (property, i) => {\r\n    try {\r\n      const url = `${_apiBase}${property}?${_api_Key}${i}`;\r\n      const response = await fetch(url, options);\r\n      if (!response.ok)\r\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const getAllMovies = async (i = \"&page=1\") => {\r\n    const movies = await getResource(\"popular\", i);\r\n    return movies.results.map(_transformMovies);\r\n  };\r\n  const getMovie = async (id) => {\r\n    const movie = await getResource(id, \"\");\r\n    return _transformMovies(movie);\r\n  };\r\n  const _transformMovies = (movie) => {\r\n    return {\r\n      id: movie.id,\r\n      title: movie.title,\r\n      overview: movie.overview,\r\n      release_date: movie.release_date,\r\n      rating: movie.vote_average,\r\n      language: movie.original_language,\r\n      thumb: movie.poster_path,\r\n      genres: movie.genres,\r\n    };\r\n  };\r\n  return { getAllMovies, getMovie };\r\n};\r\n\r\nexport default MovieService;\r\n"],"names":["_ref","handleChange","handleVideo","search","_useState","useState","_useState2","_slicedToArray","movieList","setMovieList","_useState3","_useState4","page","setPage","_useState5","_useState6","loading","setLoading","getAllMovies","MovieService","useEffect","then","res","onMovieLoaded","newMovieList","concat","_toConsumableArray","items","arr","map","item","i","_jsx","tabIndex","onClick","id","children","_jsxs","Card","style","width","margin","Img","variant","alt","name","src","thumb","Body","Title","title","Text","overview","slice","length","Link","to","Button","rating","display","renderItems","filter","toLowerCase","includes","spinner","Spinner","className","View","_ref2","movieInfo","getGenres","ListGroup","marginTop","marginBottom","paddingLeft","size","movieId","setMovieInfo","getMovie","view","genre","genres","_Fragment","sidePanel","setSidePanel","sideWindow","SidePanel","MovieList","sidePanelId","options","method","headers","accept","getResource","_asyncToGenerator","_regeneratorRuntime","mark","_callee","property","url","response","wrap","_context","prev","next","fetch","sent","ok","Error","status","json","abrupt","t0","console","error","stop","_x","_x2","apply","arguments","_callee2","movies","_args2","_context2","undefined","results","_transformMovies","_ref3","_callee3","movie","_context3","_x3","release_date","vote_average","language","original_language","poster_path"],"sourceRoot":""}